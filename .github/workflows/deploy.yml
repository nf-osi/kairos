# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help

name: shiny-deploy
  
on:
  push:
    branches:
      - develop
      - release*

jobs:
  shiny-deploy:
    runs-on: ubuntu-latest
 
    steps:
 
      - name: Install System Dependencies
        run: |
          sudo apt-get update
          # The rsconnect R package needs cUrl.
          sudo apt-get install -y libcurl4-openssl-dev gdal-bin libgdal-dev default-jdk
 
      - uses: actions/checkout@v2
      
      - name: disable renv
        run: rm .Rprofile
           
      - name: Install packages
        shell: sudo Rscript {0} # running this step as 'sudo' is necessary to be able to install packages in default library
        run: |
          options(repos = 'http://cran.fhcrc.org')
          install.packages('BiocManager', dependencies=TRUE)
          options(repos = c(BiocManager::repositories(),  getOption("repos")))
 
          install.packages(c("shiny","golem","processx","attempt","DT","glue","htmltools",
             "ggplot2","plotly","shinydashboard","readr","shinycssloaders","wrapr","forcats",
             "scales","ggridges","maftools","pkgload","waiter","dr4pl","rsconnect", "brio", "callr", 
             "diffobj", "praise", "rematch2", "markdown", "rmarkdown", "testthat", "tinytex", "waldo",
             "TSP", "anytime", "ca", "egg", "gclus", "heatmaply", "qap", "seriation", "shinyWidgets"), 
             dependencies=TRUE)

      - name: Deploy app
        run: |
          options(repos = c(BiocManager::repositories(), 'http://cran.fhcrc.org', getOption("repos")))
          
          branch<-Sys.getenv("GITHUB_REF_NAME")
          repo<-Sys.getenv("GITHUB_REPOSITORY")
          appName<-strsplit(repo, "/")[[1]][2]
          if (!startsWith(branch, "release")) {
             appName = paste(appName, "staging", sep="-")
          }
          rsConnectUser <-"${{ secrets.RSCONNECT_USER }}"
          rsConnectToken <- "${{ secrets.RSCONNECT_TOKEN }}"
          rsConnectSecret <- "${{ secrets.RSCONNECT_SECRET }}" 
          rsconnect::setAccountInfo(rsConnectUser, rsConnectToken, rsConnectSecret)
          appFiles<-dir()[which(dir()!="renv")]
          rsconnect::deployApp(appName = appName, appFiles=appFiles)
          # important NOT to run this step as sudo, otherwise env var's will be missing
        shell: Rscript {0}
